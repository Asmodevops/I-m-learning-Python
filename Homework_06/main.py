# Задача № 1.
# Дана строка, состоящая из слов, разделенных пробелами. 
# Определите, сколько в ней слов. Используйте для решения задачи метод count.
import string
s = 'Lorem lorem ipsum ipsum dolor DOLOR sit, sit sit amet' # Строка

# Я заметил, что если есть знаки препинания при повторяющихся словах, то в множество они записываются как два разных слова, 
# поэтому было принято решение удалить их с помощью модуля string.
s = s.translate(str.maketrans('', '', string.punctuation))

unique_word_in_s = set(s.split()) # Создадим множество уникальных слов, предварительно разделив строку на список.
count = 0 

for word in unique_word_in_s: 
    count += s.count(word) 
    
print(f'В вашей строке {count} слов(а).')
 
input('\nНажмите Enter, чтобы продолжить...\n')


# Задача 2
# Однажды ковбой Джо нанялся в помощники шерифу. Шериф выдал ковбою Джо строку 
# и попросил собрать из её букв как можно больше слов sheriff.
# Каждая буква может использоваться не более одного раза.
# Ковбой Джо тут же приступил к заданию шерифа, но к сожалению, он не умеет читать. Помогите ковбою Джо. 

# Формат входных данных
# Дана строка состоящая из маленьких букв латинского алфавита. 

# Формат выходных данных
# Выведите максимальное количество слов sheriff


_str = 'shrifsetshsrejifadgnqwpeirwgedfshfipsjadfgiyuw'

sheriff = {
    's': 0,
    'h': 0,
    'e': 0,
    'r': 0,
    'i': 0,
    'f': 0
}

for i in _str:
    if i in sheriff:
        sheriff[i] += 1

word = ''

while 0 not in sheriff.values():
    for key, value in sheriff.items():
        if value == 0:
            break
        if key == 'f':
            word += key
            sheriff[key] -= 1
            word += key
            sheriff[key] -= 1
        
        elif key != 'f':
            word += key
            sheriff[key] -= 1

print(f'Максимальное колличество слов "sheriff": {word.count('sheriff')}.')

input('\nНажмите Enter, чтобы продолжить...\n')


# Задача 3
# Дана строка.

s_1 = '01234567890123456789'

# Сначала выведите третий символ этой строки.
print('1.   ', s_1[2])

# Во второй строке выведите предпоследний символ этой строки.
print('2.   ', s_1[len(s_1)-2])

# В третьей строке выведите первые пять символов этой строки.
print('3.   ', s_1[:5])

# В четвертой строке выведите всю строку, кроме последних двух символов.
print('4.   ', s_1[:len(s_1)-2])

# В пятой строке выведите все символы с четными индексами (считая, что индексация начинается с 0, поэтому символы выводятся начиная с первого).
print('5.   ', s_1[2::2])

# В шестой строке выведите все символы с нечетными индексами, то есть начиная со второго символа строки.
print('6.   ', s_1[1::2])

# В седьмой строке выведите все символы в обратном порядке.
print('7.   ', s_1[::-1])

# В восьмой строке выведите все символы строки через один в обратном порядке, начиная с последнего.
print('8.   ', s_1[-1::-2])

# В девятой строке выведите длину данной строки.
print('9.   ', len(s_1))

input('\nНажмите Enter, чтобы продолжить...\n')


# задача 4
# Дана строка. Удалите из нее все символы, чьи индексы делятся на 3.

_s = '01231231231231231*3'
result = ''
for i in range(0, len(_s)):
    if i % 3 != 0:
        result += _s[i]

print(result)

input('\nНажмите Enter, чтобы продолжить...\n')


# Задача 5
# Дана строка, состоящая ровно из двух слов, разделенных пробелом. Переставьте эти слова местами. Результат запишите в строку и выведите получившуюся строку.

two_word = 'one two'

lst = two_word.split()
new_two_word = ' '.join(lst[::-1])
print(new_two_word)
