class Rabbit:
    def __init__(self):
        self.sex = self.add_sex()
        self.name = self.add_name(self)
        self.breed = self.add_breed()
        self.health = 100
        self.lvl = 1
        self.exp = 0
        self.max_exp = 10

    @staticmethod
    def add_sex():
        import random
        sex = ['–ú–∞–ª—å—á–∏–∫', '–î–µ–≤–æ—á–∫–∞']
        return random.choice(sex)

    @staticmethod
    def add_breed():
        import random
        breeds = ['–ß–µ—Ä–Ω–æ-–±—É—Ä—ã–π',
                  '–°–µ—Ä–µ–±—Ä–∏—Å—Ç—ã–π',
                  '–ë–µ–ª—ã–π –≤–µ–ª–∏–∫–∞–Ω',
                  '–ë–∞–±–æ—á–∫–∞',
                  '–í–µ–Ω—Å–∫–∏–π –≥–æ–ª—É–±–æ–π',
                  '–í–µ–Ω—Å–∫–∏–π –±–µ–ª—ã–π',
                  '–í–µ–Ω—Å–∫–∏–π —á–µ—Ä–Ω—ã–π',
                  '–†—É—Å—Å–∫–∏–π –≥–æ—Ä–Ω–æ—Å—Ç–∞–µ–≤—ã–π',
                  '–°–æ–≤–µ—Ç—Å–∫–∏–π –º–∞—Ä–¥–µ—Ä',
                  '–ê–ª—è—Å–∫–∞',
                  '–ì–æ–ª–ª–∞–Ω–¥—Å–∫–∏–π',
                  '–ö–∞–ª–∏—Ñ–æ—Ä–Ω–∏–π—Å–∫–∞—è']
        return random.choice(breeds)

    @staticmethod
    def add_name(self):
        import random
        female_names = ['–±—É–±–æ—á–∫–∞', '–∑–µ—Ñ–∏—Ä–∫–∞', '–∫–µ–∫—Å–∏–∫', '–ø—É—Å—è', '–º–∞–Ω—é–Ω—è', '–∫–∏—Å—Ç–æ—á–∫–∞', '–±—É—Å–∏–Ω–∫–∞']
        male_names = ['—á—É–ø–∏–∫', '—á–∞—ë–∫', '–∫—É–±–∏–∫', '–±–∞–Ω—Ç–∏–∫', '–±—É—Ä—ë–∫', '–≤–µ–Ω—Ü–µ—Å–ª–∞–≤', '–ø—É–ª—è']
        if self.sex == '–ú–∞–ª—å—á–∏–∫':
            return random.choice(male_names).capitalize()
        else:
            return random.choice(female_names).capitalize()

    def add_max_exp(self):
        self.max_exp = self.lvl * 10

    def __str__(self):
        return (f'–ò–º—è: {self.name}, '
                f'–ü–æ–ª: {self.sex}, '
                f'–ü–æ—Ä–æ–¥–∞: {self.breed}, '
                f'–ñ–∏–∑–∏–∫–∏: {self.health}, '
                f'–£—Ä–æ–≤–µ–Ω—å: {self.lvl}, '
                f'–≠–∫—Å–ø–∞: {self.exp}/{self.max_exp}.')


    def rename(self, new_name):
        if type(new_name) is not str:
            print('–ù–µ –Ω–∞–∑—ã–≤–∞–π –∫—Ä–æ–ª–∏–∫–æ–≤ –∫–∞–∫ –ø–æ–ø–∞–ª–æ. –û–Ω–∏ –∑–∞—Å–ª—É–∂–∏–≤–∞—é—Ç —Ç–≤–æ–µ–≥–æ —É–≤–∞–∂–µ–Ω–∏—è.')
            return 0
        if new_name == '':
            print('–ö—Ä–æ–ª–∏–∫–∏ - –Ω–µ –ø—É—Å—Ç–æ–µ –º–µ—Å—Ç–æ. –ù–µ –Ω–∞–∑—ã–≤–∞–π –∏—Ö —Ç–∞–∫.')
            return 0
        if new_name.isdigit():
            print('–î—É—Ä–∞—Ü–∫–æ–µ –∏–º—è. –ü—Ä–∏–¥—É–º–∞–µ—à—å –¥—Ä—É–≥–æ–µ - –ø—Ä–∏—Ö–æ–¥–∏.')
            return 0
        if new_name.isspace():
            print('–ù—É —Ç—ã —Å–µ–±—è –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ—á–∫–æ–π –Ω–∞–∑–æ–≤–∏.')
            return 0
        name_splited = list(new_name)
        forbidden_symbols = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0',
                             '!', '@', '#', '$', '%', '^', '&', '*', '(', ')',
                             '-', '_', '=', '+', '.', ',', '?', '/', '|', ' ', '\\']
        for symbol in forbidden_symbols:
            if symbol in name_splited:
                print('–ù–æ—Ä–º–∞–ª—å–Ω–æ–µ –∏–º—è —Å–¥–µ–ª–∞–π. –ù–µ –¥—É—Ä–∫—É–π.')
                return 0

        self.name = new_name.capitalize()
        print(f'–ö—Ä–æ–ª–∏–∫ –±—ã–ª –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω. –ú–æ–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è.')
        return 50

class Dead_rabbit(Rabbit):
    def __init__(self, name):
        self.name = name
        self.status = '–¥–æ—Ö–ª—ã–π'

    def __str__(self):
        return f'–ò–º—è: {self.name}, {self.status} üò≠'